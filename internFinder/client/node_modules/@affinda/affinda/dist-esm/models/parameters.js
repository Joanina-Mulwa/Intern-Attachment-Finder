import { ResumeData as ResumeDataMapper, ResumeSearchParameters as ResumeSearchParametersMapper, ResumeSearchConfig as ResumeSearchConfigMapper, Paths2T1Oc0ResumeSearchEmbedPostRequestbodyContentApplicationJsonSchema as Paths2T1Oc0ResumeSearchEmbedPostRequestbodyContentApplicationJsonSchemaMapper, JobDescriptionSearchParameters as JobDescriptionSearchParametersMapper, JobDescriptionSearchConfig as JobDescriptionSearchConfigMapper, PathsFqn8P8JobDescriptionSearchEmbedPostRequestbodyContentApplicationJsonSchema as PathsFqn8P8JobDescriptionSearchEmbedPostRequestbodyContentApplicationJsonSchemaMapper, PathsGpptmIndexNameDocumentsPostRequestbodyContentApplicationJsonSchema as PathsGpptmIndexNameDocumentsPostRequestbodyContentApplicationJsonSchemaMapper } from "../models/mappers";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const offset = {
    parameterPath: ["options", "offset"],
    mapper: {
        constraints: {
            InclusiveMinimum: 0
        },
        serializedName: "offset",
        type: {
            name: "Number"
        }
    }
};
export const limit = {
    parameterPath: ["options", "limit"],
    mapper: {
        defaultValue: 300,
        constraints: {
            InclusiveMaximum: 300,
            InclusiveMinimum: 1
        },
        serializedName: "limit",
        type: {
            name: "Number"
        }
    }
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "multipart/form-data",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const file = {
    parameterPath: ["options", "file"],
    mapper: {
        serializedName: "file",
        type: {
            name: "Stream"
        }
    }
};
export const url = {
    parameterPath: ["options", "url"],
    mapper: {
        serializedName: "url",
        type: {
            name: "String"
        }
    }
};
export const data = {
    parameterPath: ["options", "data"],
    mapper: ResumeDataMapper
};
export const identifier = {
    parameterPath: ["options", "identifier"],
    mapper: {
        serializedName: "identifier",
        type: {
            name: "String"
        }
    }
};
export const fileName = {
    parameterPath: ["options", "fileName"],
    mapper: {
        serializedName: "fileName",
        type: {
            name: "String"
        }
    }
};
export const wait = {
    parameterPath: ["options", "wait"],
    mapper: {
        defaultValue: "true",
        serializedName: "wait",
        type: {
            name: "String"
        }
    }
};
export const language = {
    parameterPath: ["options", "language"],
    mapper: {
        serializedName: "language",
        type: {
            name: "String"
        }
    }
};
export const expiryTime = {
    parameterPath: ["options", "expiryTime"],
    mapper: {
        serializedName: "expiryTime",
        type: {
            name: "String"
        }
    }
};
export const accept1 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const identifier1 = {
    parameterPath: "identifier",
    mapper: {
        serializedName: "identifier",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const format = {
    parameterPath: ["options", "format"],
    mapper: {
        serializedName: "format",
        type: {
            name: "String"
        }
    }
};
export const contentType1 = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const body = {
    parameterPath: "body",
    mapper: ResumeDataMapper
};
export const redactHeadshot = {
    parameterPath: ["options", "redactHeadshot"],
    mapper: {
        defaultValue: "true",
        serializedName: "redactHeadshot",
        type: {
            name: "String"
        }
    }
};
export const redactPersonalDetails = {
    parameterPath: ["options", "redactPersonalDetails"],
    mapper: {
        defaultValue: "true",
        serializedName: "redactPersonalDetails",
        type: {
            name: "String"
        }
    }
};
export const redactWorkDetails = {
    parameterPath: ["options", "redactWorkDetails"],
    mapper: {
        defaultValue: "true",
        serializedName: "redactWorkDetails",
        type: {
            name: "String"
        }
    }
};
export const redactEducationDetails = {
    parameterPath: ["options", "redactEducationDetails"],
    mapper: {
        defaultValue: "true",
        serializedName: "redactEducationDetails",
        type: {
            name: "String"
        }
    }
};
export const redactReferees = {
    parameterPath: ["options", "redactReferees"],
    mapper: {
        defaultValue: "true",
        serializedName: "redactReferees",
        type: {
            name: "String"
        }
    }
};
export const redactLocations = {
    parameterPath: ["options", "redactLocations"],
    mapper: {
        defaultValue: "true",
        serializedName: "redactLocations",
        type: {
            name: "String"
        }
    }
};
export const redactDates = {
    parameterPath: ["options", "redactDates"],
    mapper: {
        defaultValue: "true",
        serializedName: "redactDates",
        type: {
            name: "String"
        }
    }
};
export const redactGender = {
    parameterPath: ["options", "redactGender"],
    mapper: {
        defaultValue: "true",
        serializedName: "redactGender",
        type: {
            name: "String"
        }
    }
};
export const body1 = {
    parameterPath: "body",
    mapper: ResumeSearchParametersMapper
};
export const resume = {
    parameterPath: "resume",
    mapper: {
        serializedName: "resume",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const jobDescription = {
    parameterPath: "jobDescription",
    mapper: {
        serializedName: "job_description",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const index = {
    parameterPath: ["options", "index"],
    mapper: {
        serializedName: "index",
        type: {
            name: "String"
        }
    }
};
export const searchExpression = {
    parameterPath: ["options", "searchExpression"],
    mapper: {
        serializedName: "search_expression",
        type: {
            name: "String"
        }
    }
};
export const jobTitlesWeight = {
    parameterPath: ["options", "jobTitlesWeight"],
    mapper: {
        constraints: {
            InclusiveMaximum: 1,
            InclusiveMinimum: 0
        },
        serializedName: "job_titles_weight",
        type: {
            name: "Number"
        }
    }
};
export const yearsExperienceWeight = {
    parameterPath: ["options", "yearsExperienceWeight"],
    mapper: {
        constraints: {
            InclusiveMaximum: 1,
            InclusiveMinimum: 0
        },
        serializedName: "years_experience_weight",
        type: {
            name: "Number"
        }
    }
};
export const locationsWeight = {
    parameterPath: ["options", "locationsWeight"],
    mapper: {
        constraints: {
            InclusiveMaximum: 1,
            InclusiveMinimum: 0
        },
        serializedName: "locations_weight",
        type: {
            name: "Number"
        }
    }
};
export const languagesWeight = {
    parameterPath: ["options", "languagesWeight"],
    mapper: {
        constraints: {
            InclusiveMaximum: 1,
            InclusiveMinimum: 0
        },
        serializedName: "languages_weight",
        type: {
            name: "Number"
        }
    }
};
export const skillsWeight = {
    parameterPath: ["options", "skillsWeight"],
    mapper: {
        constraints: {
            InclusiveMaximum: 1,
            InclusiveMinimum: 0
        },
        serializedName: "skills_weight",
        type: {
            name: "Number"
        }
    }
};
export const educationWeight = {
    parameterPath: ["options", "educationWeight"],
    mapper: {
        constraints: {
            InclusiveMaximum: 1,
            InclusiveMinimum: 0
        },
        serializedName: "education_weight",
        type: {
            name: "Number"
        }
    }
};
export const searchExpressionWeight = {
    parameterPath: ["options", "searchExpressionWeight"],
    mapper: {
        constraints: {
            InclusiveMaximum: 1,
            InclusiveMinimum: 0
        },
        serializedName: "search_expression_weight",
        type: {
            name: "Number"
        }
    }
};
export const socCodesWeight = {
    parameterPath: ["options", "socCodesWeight"],
    mapper: {
        constraints: {
            InclusiveMaximum: 1,
            InclusiveMinimum: 0
        },
        serializedName: "soc_codes_weight",
        type: {
            name: "Number"
        }
    }
};
export const managementLevelWeight = {
    parameterPath: ["options", "managementLevelWeight"],
    mapper: {
        constraints: {
            InclusiveMaximum: 1,
            InclusiveMinimum: 0
        },
        serializedName: "management_level_weight",
        type: {
            name: "Number"
        }
    }
};
export const body2 = {
    parameterPath: "body",
    mapper: ResumeSearchConfigMapper
};
export const body3 = {
    parameterPath: ["options", "body"],
    mapper: Paths2T1Oc0ResumeSearchEmbedPostRequestbodyContentApplicationJsonSchemaMapper
};
export const body4 = {
    parameterPath: "body",
    mapper: JobDescriptionSearchParametersMapper
};
export const body5 = {
    parameterPath: "body",
    mapper: JobDescriptionSearchConfigMapper
};
export const body6 = {
    parameterPath: ["options", "body"],
    mapper: PathsFqn8P8JobDescriptionSearchEmbedPostRequestbodyContentApplicationJsonSchemaMapper
};
export const documentType = {
    parameterPath: ["options", "documentType"],
    mapper: {
        serializedName: "document_type",
        type: {
            name: "String"
        }
    }
};
export const name = {
    parameterPath: ["options", "name"],
    mapper: {
        serializedName: "name",
        type: {
            name: "String"
        }
    }
};
export const documentType1 = {
    parameterPath: ["options", "documentType"],
    mapper: {
        serializedName: "documentType",
        type: {
            name: "String"
        }
    }
};
export const name1 = {
    parameterPath: "name",
    mapper: {
        serializedName: "name",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body7 = {
    parameterPath: "body",
    mapper: PathsGpptmIndexNameDocumentsPostRequestbodyContentApplicationJsonSchemaMapper
};
export const id = {
    parameterPath: ["options", "id"],
    mapper: {
        serializedName: "id",
        type: {
            name: "Number"
        }
    }
};
export const username = {
    parameterPath: "username",
    mapper: {
        serializedName: "username",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const email = {
    parameterPath: ["options", "email"],
    mapper: {
        serializedName: "email",
        type: {
            name: "String"
        }
    }
};
export const apiKey = {
    parameterPath: ["options", "apiKey"],
    mapper: {
        serializedName: "apiKey",
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map